=pod

=encoding UTF-8

=head1 NAME

Dist::Zilla::Plugin::RewriteVersion::Transitional - ease the transition to [RewriteVersion] in your distribution

=head1 VERSION

version 0.002

=head1 SYNOPSIS

In your F<dist.ini>:

    [RewriteVersion::Transitional]
    fallback_version_provider = Git::NextVersion
    version_regexp = ^v([\d._]+)$

=head1 DESCRIPTION

=for stopwords BumpVersionAfterRelease OurPkgVersion PkgVersion

This is a L<Dist::Zilla> plugin that subclasses
L<[RewriteVersion]|Dist::Zilla::Plugin::RewriteVersion>, to allow plugin
bundles to transition from L<[PkgVersion]|Dist::Zilla::Plugin::PkgVersion> or
L<[OurPkgVersion]|Dist::Zilla::Plugin::OurPkgVersion> to
L<[RewriteVersion]|Dist::Zilla::Plugin::RewriteVersion>
and L<[BumpVersionAfterRelease]|Dist::Zilla::Plugin::BumpVersionAfterRelease>
without having to manually edit the F<dist.ini> or any F<.pm> files.

=head2 Determining the distribution version

As with L<[RewriteVersion]|Dist::Zilla::Plugin::RewriteVersion>, the version
can be overridden with the C<V> environment variable, or provided through some
other means by setting C<skip_version_provider = 1>.  Then, the main module (see
L<Dist::Zilla/main module>) in the distribution is checked for a C<$VERSION>
assignment.  If one is not found, then the plugin named by the
C<fallback_version_provider> is instantiated (with any extra configuration
options provided) and called to determine the version.

=head2 Munging the modules

When used in a distribution where the F<.pm> file(s) does not contain a
C<$VERSION> declaration, this plugin will add one. If one is already present,
it leaves it alone, acting just as
L<[RewriteVersion]|Dist::Zilla::Plugin::RewriteVersion> would.

You would then use L<[BumpVersionAfterRelease]|Dist::Zilla::Plugin::BumpVersionAfterRelease>
to increment the C<$VERSION> in the F<.pm> files in the repository, as normal.

=head1 CONFIGURATION OPTIONS

Configuration is the same as in
L<[RewriteVersion]|Dist::Zilla::Plugin::RewriteVersion>, with the addition of:

=head2 fallback_version_provider

Specify the name (in abbreviated form) of the plugin to use as a version
provider if the version was not already set with the C<V> environment
variable.  Not used if
L<Dist::Zilla::Plugin::RewriteVersion/skip_version_provider> is true.

=head1 SUPPORT

=for stopwords irc

Bugs may be submitted through L<the RT bug tracker|https://rt.cpan.org/Public/Dist/Display.html?Name=Dist-Zilla-Plugin-RewriteVersion-Transitional>
(or L<bug-Dist-Zilla-Plugin-RewriteVersion-Transitional@rt.cpan.org|mailto:bug-Dist-Zilla-Plugin-RewriteVersion-Transitional@rt.cpan.org>).
I am also usually active on irc, as 'ether' at C<irc.perl.org>.

=head1 SEE ALSO

=over 4

=item *

L<Dist::Zilla::Plugin::PkgVersion>

=item *

L<Dist::Zilla::Plugin::RewriteVersion>

=item *

L<Dist::Zilla::Plugin::BumpVersionAfterRelease>

=back

=head1 AUTHOR

Karen Etheridge <ether@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2014 by Karen Etheridge.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
